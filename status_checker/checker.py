import asyncio
import socket

from mcstatus import JavaServer

ips = """195.60.70.214:25565
195.60.70.211:25565
195.60.70.210:25565
195.60.70.213:25565
195.60.70.208:25565
195.60.70.209:25565
195.60.70.212:25565
195.60.70.215:25565
195.60.70.219:25565
45.137.155.88:25565
195.88.42.14:25565
195.88.42.55:25565
185.218.202.155:25565
93.170.80.129:25565
93.171.170.39:25565
185.237.204.14:25565
93.171.214.66:25565
185.250.150.19:25565
195.182.194.166:25565
195.184.196.66:25565
195.184.196.74:25565
195.184.196.38:25565
195.184.196.94:25565
195.184.196.50:25565
195.184.196.86:25565
195.184.196.126:25565
195.184.196.178:25565
195.184.196.186:25565
195.184.196.190:25565
195.184.196.158:25565
195.184.196.198:25565
195.184.196.122:25565
195.184.196.206:25565
195.184.196.194:25565
195.184.196.218:25565
195.184.196.210:25565
195.184.196.222:25565
195.184.196.214:25565
195.184.196.154:25565
195.184.196.142:25565
195.184.196.78:25565
195.184.197.58:25565
195.211.137.135:25565
193.19.242.69:25565
212.86.97.178:25565
193.29.204.12:25565
193.30.244.182:25565
62.122.203.203:25565
193.33.207.29:25565
193.34.95.127:25565
193.104.203.36:25565
193.106.58.33:25565
193.109.144.181:25565
"""


async def check(address=None, ip=None, port=None):
    try:
        server = await JavaServer.async_lookup(address or f'{ip}:{port}', timeout=1)
        print(f'{address} {server.status().raw}')
        with open('good.txt', 'a') as file:
            file.write(f'{address} {server.status().raw}\n')
    except socket.timeout:
        print("timeout")
    except OSError:
        print('Pizda OSError')


loop = asyncio.get_event_loop()
tasks = []
for ip in ips.split('\n'):
    tasks.append(loop.create_task(check(ip)))
asyncio.gather(*tasks)
loop.run_forever()
